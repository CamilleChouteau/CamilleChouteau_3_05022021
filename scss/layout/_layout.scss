.header {
    padding: 1.5rem 0rem 1rem 0rem;

    &__logo__hyperlink {
        display: flex;
        justify-content: center;

        &__image {
            width: 60%;

            @include tablet {
                height: 3.6rem;
                width: auto;
            }
        }
    }
}

.header-restaurants {
    padding: 1rem;
    position: relative;

    &__hyperlink {
        display: flex;
        justify-content: center;
        align-items: center;

        text-decoration: none;
        color: black;

        &__arrow {
            position: absolute;
            left: 0;
            margin-left: 3rem;
            font-size: 1.3rem;
        }
        &__logo {
            width: 50%;
            @include tablet {
                width: 30%;
            }
        }
    }
}

.restaurant-photo {
    &__image {
        max-height: 30rem;
        width: 100%;
        object-fit: cover;
        object-position: 0rem 50%;
    }
}

.menu {
    background-color: $color-light-background;
    position: relative;
    margin-top: -4rem;
    padding-bottom: 4rem;
    border-radius: 3rem 3rem 0rem 0rem;

    &__header {
        display: grid;
        grid-template-columns: 1fr min-content;
        align-items: center;
        padding: 1rem 2rem 0rem 2rem;

        @include tablet {
            padding: 0rem 4rem 0rem 4rem;
        }
        @include desktop {
            padding: 0rem 5rem 0rem 5rem;
        }

        &__restaurant-name {
            font-family: $font-logo;
            font-size: 2rem;
            font-weight: lighter;

            @include tablet {
                font-size: 2.3rem;
            }

            @include desktop {
                font-size: 2.8rem;
            }
        }

        &__heart {
            font-size: 1.8rem;
            transform: translateY(-0.2rem);

            /******************************* HEART ANIMATION *********************************
            font-weight: bold = permet que le background prenne la forme du coeur et 
            le remplisse
            (mais du coup il couvre le background)

            -webkit-text-fill-color: transparent = permet de rendre le coeur transparent 
            (et donc de voir le background)

            -webkit-text-stroke-width = permet de mettre une bordure au coeur 
            (et de voir à nouveau sa silhouette)

            background-repeat = régle un bug au niveau du hover

            -webkit-background-clip: text = permet que le background soit bien contenu 
            dans le coeur 
            (par défaut il à la forme du bloc)
                        
            background-size = permet de faire que le background fasse 0 de hauteur 
            (donc est invisible)

            background-position = permet que le début du background soit en bas 
            (donc l'animation du coeur se remplira par le bas et non par le haut)
               
            *******************************************************************************/

            transition: all 0.5s;

            -webkit-text-fill-color: transparent;
            -webkit-text-stroke-width: 0.08rem;
            background: -webkit-linear-gradient(
                top right,
                $color-primary 30%,
                $color-secondary 70%
            );
            background-repeat: no-repeat;
            background-clip: text;
            -webkit-background-clip: text;
            background-size: 100% 0;
            background-position: 100% 100%;
            font-weight: bold;
            cursor: pointer;

            &:hover {
                background-size: 100% 100%;
                -webkit-text-stroke-color: transparent;
            }

            @include desktop {
                font-size: 2.2rem;
            }
        }
    }

    &__category {
        padding: 0rem 1rem 0rem 1rem;

        &__headers {
            font-family: $font-base;
            font-weight: lighter;
            font-size: $font-size-category-menu;
            margin: 0rem 0rem 0.3rem 0rem;

            @include desktop {
                font-size: 1.7rem;
            }
        }
        &__underline {
            background-color: $color-tertiary;
            height: 0.3rem;
            width: 3.4rem;

            @include desktop {
                width: 4rem;
            }
        }

        &__cards {
            @include tablet {
                display: grid;
                grid-template-columns: 1fr 1fr;
                column-gap: 2rem;
                row-gap: 1.3rem;
                margin: 1.5rem 0rem 1.5rem 0rem;
            }

            &__card {
                margin: 1rem 0rem 1rem 0rem;
                background-color: white;
                border-radius: 1rem;
                box-shadow: 0.3rem 0.3rem 0.4rem $color-box-shadow;
                cursor: pointer;
                @include tablet {
                    margin: 0;
                }

                animation: card-appear 0.4s both;

                /******* BOUCLE ANIMATION CARTE ***********
                Sert à mettre un délai différent à l'apparition de chaque carte 
                (un peu plus grand à chaque fois).
                La valeur de la variable $i va aller de 2 à 10 
                (on saute la 1ère card car elle n'a pas besoin de délai)
                Le nth-child sert à faire référence à la énième card 
                (vu que la valeur de $i augmente, à chaque tour de boucle on fait 
                référence à une carte un peu plus bas dans la liste et on lui met 
                un délai d'animation un peu plus grand).
                *******************************************/
                @for $i from 2 to 10 {
                    &:nth-child(#{$i}n) {
                        animation-delay: #{$i * 0.15}s;
                    }
                }

                display: grid;
                grid-template-columns: 1fr min-content;
                overflow: hidden;
                justify-content: center;
                align-content: stretch;

                /******************** ANIMATION CHECK ************************
                width : pour la largeur du check quand il s'affiche

                overflow: hidden;
                text-overflow: ellipsis;
                white-space: nowrap;
                (+ min-width) = permet que le texte ne revienne pas à la ligne auto 
                et de le couper avec "..."

                



                

                **************************************************************/
                &:hover > &__check {
                    width: 4rem;
                }

                &:hover &__check__icon {
                    transform: rotate(360deg);
                }

                &__content {
                    display: grid;
                    grid-template-columns: 1fr min-content;
                    align-items: end;
                    padding: 0.5rem 1rem 0.5rem 1rem;

                    &__text {
                        min-width: 0;
                        &__dish {
                            margin: 0;
                            overflow: hidden;
                            text-overflow: ellipsis;
                            white-space: nowrap;
                        }
                        &__details {
                            margin: 0;
                            font-family: $font-description;
                            font-weight: bold;

                            overflow: hidden;
                            text-overflow: ellipsis;
                            white-space: nowrap;
                        }
                    }

                    &__price {
                        grid-column: 2;
                        margin: 0;
                    }
                }

                &__check {
                    width: 0rem;
                    display: grid;

                    background-color: $color-tertiary;
                    transition: all 0.3s ease-in-out;

                    &__icon {
                        color: white;
                        font-size: 1.4rem;
                        justify-self: center;
                        align-self: center;
                        transition: all 0.3s;
                        transform: rotate(90deg);
                    }
                }
            }
        }
    }

    &__order-container {
        display: flex;
        justify-content: center;
        margin-top: 3.5rem;
        &__link {
            background: linear-gradient(
                to bottom right,
                $color-secondary,
                $color-primary
            );
            padding: 1rem 3rem 1rem 3rem;
            border-radius: 1.88rem;
            color: white;
            text-decoration: none;
            font-size: 1rem;
            box-shadow: 0.2rem 0.2rem 0.6rem 0.2rem $color-box-shadow;
            border: none;
            transition: box-shadow 0.5s;

            &:hover {
                opacity: 0.85;
                box-shadow: 0.2rem 0.2rem 0.6rem 0.3rem
                    rgba($color-primary, 0.6);
            }
        }
    }
}

.footer {
    background-color: $color-footer;
    padding-bottom: 2rem;

    &__logo {
        margin: 0;
        font-family: $font-logo;
        font-size: $font-size-logo;
        font-weight: lighter;
        color: white;
        padding: 2rem 0rem 1rem 2.5rem;
    }

    &__nav {
        &__list {
            list-style-type: none;

            @include tablet {
                display: flex;
                justify-content: space-evenly;
            }
            &__item {
                padding: 0.5rem;

                @include tablet {
                    font-size: 1.1rem;
                }

                &__hyperlink {
                    text-decoration: none;
                    color: white;
                    display: flex;

                    &__icon {
                        padding-right: 0.8rem;
                        width: 0.8rem;
                        display: flex;
                        justify-content: center;
                    }
                }
            }
        }
    }
}
